{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "defaultValue": "cloudadmin",
            "type": "String"
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Remote desktop user password. Must be a strong password"
            }
        },
        "storageAccounts_twotierdemoappdiag498_name": {
            "defaultValue": "twotierdemoappdiag498",
            "type": "String"
        },
        "virtualMachines_mylinuxserver_name": {
            "defaultValue": "mylinuxserver",
            "type": "String"
        },
        "DTLSubnetId": {
            "type": "string",
            "defaultValue": "$(LabSubnetId)"
        },
        "virtualMachines_windowsserver_name": {
            "defaultValue": "windowsserver",
            "type": "String"
        },
        "networkInterfaces_mylinuxserver498_name": {
            "defaultValue": "mylinuxserver498",
            "type": "String"
        },
        "networkInterfaces_windowsserver360_name": {
            "defaultValue": "windowsserver360",
            "type": "String"
        },
        "publicIPAddresses_mylinuxserver_ip_name": {
            "defaultValue": "mylinuxserver-ip",
            "type": "String"
        },
        "publicIPAddresses_windowsserver_ip_name": {
            "defaultValue": "windowsserver-ip",
            "type": "String"
        },
        "storageAccounts_twotierdemoappdiag_name": {
            "defaultValue": "twotierdemoappdiag",
            "type": "String"
        },
        "virtualNetworks_twotierdemoapp_vnet_name": {
            "defaultValue": "twotierdemoapp-vnet",
            "type": "String"
        },
        "virtualNetworks_twotierdemoappvnet950_name": {
            "defaultValue": "twotierdemoappvnet950",
            "type": "String"
        },
        "networkSecurityGroups_mylinuxserver_nsg_name": {
            "defaultValue": "mylinuxserver-nsg",
            "type": "String"
        },
        "networkSecurityGroups_windowsserver_nsg_name": {
            "defaultValue": "windowsserver-nsg",
            "type": "String"
        },
        "schedules_shutdown_computevm_mylinuxserver_name": {
            "defaultValue": "shutdown-computevm-mylinuxserver",
            "type": "String"
        },
        "schedules_shutdown_computevm_windowsserver_name": {
            "defaultValue": "shutdown-computevm-windowsserver",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-04-01",
            "name": "[parameters('networkSecurityGroups_mylinuxserver_nsg_name')]",
            "location": "southcentralus",
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "a68147d4-4d1b-486c-b19f-05064a7c4398",
                "securityRules": [],
                "defaultSecurityRules": [
                    {
                        "name": "AllowVnetInBound",
                        "etag": "W/\"d39b07e7-ab18-4391-a3eb-5329f44b1837\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow inbound traffic from all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAzureLoadBalancerInBound",
                        "etag": "W/\"d39b07e7-ab18-4391-a3eb-5329f44b1837\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow inbound traffic from azure load balancer",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllInBound",
                        "etag": "W/\"d39b07e7-ab18-4391-a3eb-5329f44b1837\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Deny all inbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowVnetOutBound",
                        "etag": "W/\"d39b07e7-ab18-4391-a3eb-5329f44b1837\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowInternetOutBound",
                        "etag": "W/\"d39b07e7-ab18-4391-a3eb-5329f44b1837\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow outbound traffic from all VMs to Internet",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "Internet",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllOutBound",
                        "etag": "W/\"d39b07e7-ab18-4391-a3eb-5329f44b1837\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Deny all outbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-04-01",
            "name": "[parameters('networkSecurityGroups_windowsserver_nsg_name')]",
            "location": "westeurope",
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "701cb2d0-3a82-4219-acf6-46c2da4b2e4d",
                "securityRules": [],
                "defaultSecurityRules": [
                    {
                        "name": "AllowVnetInBound",
                        "etag": "W/\"bfe461d8-1446-4494-b2c1-192606de99c7\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow inbound traffic from all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAzureLoadBalancerInBound",
                        "etag": "W/\"bfe461d8-1446-4494-b2c1-192606de99c7\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow inbound traffic from azure load balancer",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllInBound",
                        "etag": "W/\"bfe461d8-1446-4494-b2c1-192606de99c7\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Deny all inbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowVnetOutBound",
                        "etag": "W/\"bfe461d8-1446-4494-b2c1-192606de99c7\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowInternetOutBound",
                        "etag": "W/\"bfe461d8-1446-4494-b2c1-192606de99c7\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow outbound traffic from all VMs to Internet",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "Internet",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllOutBound",
                        "etag": "W/\"bfe461d8-1446-4494-b2c1-192606de99c7\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Deny all outbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-04-01",
            "name": "[parameters('publicIPAddresses_mylinuxserver_ip_name')]",
            "location": "southcentralus",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "3f355f72-030c-4b4d-b5b6-ea894bbd42fa",
                "ipAddress": "40.84.129.102",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-04-01",
            "name": "[parameters('publicIPAddresses_windowsserver_ip_name')]",
            "location": "westeurope",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "3e95c4df-dee0-4e0a-a8e5-c6a810451f7b",
                "ipAddress": "13.94.156.72",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-04-01",
            "name": "[parameters('virtualNetworks_twotierdemoapp_vnet_name')]",
            "location": "southcentralus",
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "5ee150ab-461b-4e1c-beed-d801fbb1984e",
                "addressSpace": {
                    "addressPrefixes": [
                        "172.18.3.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "etag": "W/\"d1ed3116-3603-45b9-a168-db4b65d2eee8\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "addressPrefix": "172.18.3.0/24",
                            "delegations": []
                        }
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-04-01",
            "name": "[parameters('virtualNetworks_twotierdemoappvnet950_name')]",
            "location": "westeurope",
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "d2ae1b55-69c6-4586-aaff-71be7da98bf9",
                "addressSpace": {
                    "addressPrefixes": [
                        "172.18.4.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "etag": "W/\"6da56308-03c9-4cd3-b69c-b9622109d616\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "addressPrefix": "172.18.4.0/24",
                            "delegations": []
                        }
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[parameters('storageAccounts_twotierdemoappdiag_name')]",
            "location": "southcentralus",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[parameters('storageAccounts_twotierdemoappdiag498_name')]",
            "location": "westeurope",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "microsoft.devtestlab/schedules",
            "apiVersion": "2016-05-15",
            "name": "[parameters('schedules_shutdown_computevm_mylinuxserver_name')]",
            "location": "southcentralus",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_mylinuxserver_name'))]"
            ],
            "properties": {
                "status": "Enabled",
                "taskType": "ComputeVmShutdownTask",
                "dailyRecurrence": {
                    "time": "1900"
                },
                "timeZoneId": "UTC",
                "notificationSettings": {
                    "status": "Disabled",
                    "timeInMinutes": 30
                },
                "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_mylinuxserver_name'))]",
                "provisioningState": "Succeeded",
                "uniqueIdentifier": "1cfc69bf-abd7-4974-ab06-5ed51a2093da"
            }
        },
        {
            "type": "microsoft.devtestlab/schedules",
            "apiVersion": "2016-05-15",
            "name": "[parameters('schedules_shutdown_computevm_windowsserver_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_windowsserver_name'))]"
            ],
            "properties": {
                "status": "Enabled",
                "taskType": "ComputeVmShutdownTask",
                "dailyRecurrence": {
                    "time": "1900"
                },
                "timeZoneId": "UTC",
                "notificationSettings": {
                    "status": "Disabled",
                    "timeInMinutes": 30
                },
                "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_windowsserver_name'))]",
                "provisioningState": "Succeeded",
                "uniqueIdentifier": "d71d1826-9ee6-438f-9d79-6e0bfd744f1e"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('virtualNetworks_twotierdemoapp_vnet_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_twotierdemoapp_vnet_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "addressPrefix": "172.18.3.0/24",
                "delegations": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('virtualNetworks_twotierdemoappvnet950_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_twotierdemoappvnet950_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "addressPrefix": "172.18.4.0/24",
                "delegations": []
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_twotierdemoappdiag_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_twotierdemoappdiag_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_twotierdemoappdiag498_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_twotierdemoappdiag498_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "name": "[parameters('virtualMachines_mylinuxserver_name')]",
            "location": "southcentralus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_mylinuxserver498_name'))]",
                "[resourceId('Microsoft.Storage/StorageAccounts', parameters('storageAccounts_twotierdemoappdiag_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D2s_v3"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "18.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(parameters('virtualMachines_mylinuxserver_name'), '_OsDisk_1_1f01696eaf6544aea668ba852d6c0a43')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_mylinuxserver_name'), '_OsDisk_1_1f01696eaf6544aea668ba852d6c0a43'))]"
                        },
                        "diskSizeGB": 30
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_mylinuxserver_name')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false,
                        "provisionVMAgent": true
                    },
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_mylinuxserver498_name'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', parameters('storageAccounts_twotierdemoappdiag_name'), '.blob.core.windows.net/')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "name": "[parameters('virtualMachines_windowsserver_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_windowsserver360_name'))]",
                "[resourceId('Microsoft.Storage/StorageAccounts', parameters('storageAccounts_twotierdemoappdiag498_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_DS1_v2"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "Datacenter-Core-1903-with-Containers-smalldisk",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(parameters('virtualMachines_windowsserver_name'), '_OsDisk_1_1a49140066ed40948721a19e3d68e7d3')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_windowsserver_name'), '_OsDisk_1_1a49140066ed40948721a19e3d68e7d3'))]"
                        },
                        "diskSizeGB": 30
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_windowsserver_name')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true
                    },
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_windowsserver360_name'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', parameters('storageAccounts_twotierdemoappdiag498_name'), '.blob.core.windows.net/')]"
                    }
                },
                "licenseType": "Windows_Client"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_twotierdemoappdiag_name'), '/default/bootdiagnostics-mylinuxse-7eb5e779-3fcf-4038-aea5-7e2bd9e04ef9')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_twotierdemoappdiag_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_twotierdemoappdiag_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_twotierdemoappdiag498_name'), '/default/bootdiagnostics-windowsse-b222ee7a-9d51-44d5-bf83-8a699e40b556')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_twotierdemoappdiag498_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_twotierdemoappdiag498_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-04-01",
            "name": "[parameters('networkInterfaces_mylinuxserver498_name')]",
            "location": "southcentralus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_mylinuxserver_ip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_twotierdemoapp_vnet_name'), 'default')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_mylinuxserver_nsg_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "433594ed-4d64-4b8a-ae8b-9ad49a34a84d",
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "etag": "W/\"2fec2c84-3386-4c77-a411-b792d35c76bf\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "privateIPAddress": "172.18.3.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_mylinuxserver_ip_name'))]"
                            },
                            "subnet": {
                                "id": "[parameters('DTLSubnetId')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [],
                    "appliedDnsServers": [],
                    "internalDomainNameSuffix": "vniocxq1iyoe3pxn1aa5xmmyjg.jx.internal.cloudapp.net"
                },
                "macAddress": "00-0D-3A-75-39-90",
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_mylinuxserver_nsg_name'))]"
                },
                "primary": true,
                "tapConfigurations": []
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-04-01",
            "name": "[parameters('networkInterfaces_windowsserver360_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_windowsserver_ip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_twotierdemoappvnet950_name'), 'default')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_windowsserver_nsg_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "47b38593-979a-4cb1-b0de-0eab853fd597",
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "etag": "W/\"e2e09193-b011-44cb-b850-5c4dbcae1225\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "privateIPAddress": "172.18.4.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_windowsserver_ip_name'))]"
                            },
                            "subnet": {
                                "id": "[parameters('DTLSubnetId')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [],
                    "appliedDnsServers": [],
                    "internalDomainNameSuffix": "kun03uwgngdelkx5og5h1kml5b.ax.internal.cloudapp.net"
                },
                "macAddress": "00-0D-3A-29-D0-93",
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_windowsserver_nsg_name'))]"
                },
                "primary": true,
                "tapConfigurations": []
            }
        }
    ]
}